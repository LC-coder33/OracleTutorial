create table muser(
id int,
reg_num varchar2(8) not null,
name varchar2(10 char),
grade int,
salary int,
time int);

create sequence muser_no
increment by 1
start with 10
;

insert into muser values(muser_no.nextval,'870205-1','이승진',1,10000,34);
insert into muser values(muser_no.nextval,'880405-1','박이진',2,20000,31);
insert into muser values(muser_no.nextval,'770715-2','최이수',4,40000,32);
insert into muser values(muser_no.nextval,'010205-3','류진아',1,10000,30);
insert into muser values(muser_no.nextval,'810205-2','오현식',2,20000,34);
insert into muser values(muser_no.nextval,'820219-2','정승우',3,30000,35);
insert into muser values(muser_no.nextval,'020205-3','이재수',1,10000,30);
insert into muser values(muser_no.nextval,'970214-2','박지영',2,20000,31);
insert into muser values(muser_no.nextval,'040205-4','정은아',4,40000,31);
insert into muser values(muser_no.nextval,'770225-1','정재영',5,50000,30);
insert into muser values(muser_no.nextval,'770905-2','이신수',4,40000,34);
insert into muser values(muser_no.nextval,'050208-3','이발끈',2,20000,30);
insert into muser values(muser_no.nextval,'051205-4','이욱이',1,10000,34);
insert into muser values(muser_no.nextval,'891215-1','지승아',3,30000,30);
insert into muser values(muser_no.nextval,'670805-1','현진수',2,20000,34);
insert into muser values(muser_no.nextval,'840207-1','최이런',1,10000,35);
insert into muser values(muser_no.nextval,'770405-1','이천안',1,10000,31);


1 grade가 3인 사람은 모두 몇명인가요?
select count(*) from muser where grade = 3;

2 grade가 1,2,4인 사람들의 salary의 평균을 구하시오.
select avg(salary) from muser where grade = 1 or grade = 2 or grade = 4;

or

select avg(salary) from muser where grade in (1,2,4);

3 salary가 20000 미만인 사람은 총 몇명입니까?
select count(*) from muser where salary < 20000;

4 salary가 30000 이상인 사람의 salary 평균을 구하시오.
select round(avg(salary),2) from muser where salary >= 30000;

5 77년생(47세)중에  salary가 가장 적은 사람의 이름과 나이와 salary를 출력하시오.

나이 확인 용 함수
create or replace function age_check(reg_num in varchar2)
return varchar2
is age varchar2(2);
begin    IF SUBSTR(reg_num, 8,1) in( '1' , '2')

      THEN age := to_number(to_char(sysdate,'YYYY')) - (1900+to_number(substr(reg_num,1,2)));

    ELSE age := to_number(to_char(sysdate,'YYYY')) - (2000+to_number(substr(reg_num,1,2)));

    END IF;

    RETURN age;

END;

select 문
select name, age_check(reg_num) 나이, 
salary from muser where age_check(reg_num) = 47 
and salary = (select min(salary) from muser where age_check(reg_num) = 47);

or

select name 이름, (extract (year from sysdate)) - (decode(substr(reg_num,8,1),'1',1900,'2',1900,2000) + substr(reg_num,1,2)) 나이,
salary 급여
from muser
where substr(reg_num,1,2)='77' and salary=(
select min(salary) from muser
where substr(reg_num,1,2)='77');

select name, min(salary)
from muser
where substr(reg_num,1,2)='77;	-- 에러가 날 것임. 에러 원인은 다중행과 단일행

6 모든 사람의 이름과, 생일(월과 일 예를들어 0205)를 출력하시오.
select name, substr(reg_num,3,4) from muser;

7 남자의 평균 급여를 구하시오.
create or replace function gender_check(jumin in varchar2)
return varchar2
is gender varchar2(2);
begin    IF SUBSTR(jumin, 8,1) in( '1' , '3')

      THEN GENDER := '남';

    ELSE GENDER := '여';

    END IF;

    RETURN GENDER;

END;

select avg(salary) from muser where gender_check(reg_num) = '남';

or

select avg(salary)
from muser
where substr(reg_num,8,1) in ('1','3');

8 전체 평균급여보다 높은 급여를 받는 사람의 이름과, 급여를 출력하시오
select name, salary from muser where salary > (select avg(salary) from muser);

9 전체 평균급여보다 높은 급여를 받는 사람의 이름과, 급여, 평균급여를 출력하시오
select name, salary, (select avg(salary) from muser) avgSalary from muser where salary > (select avg(salary) from muser);

10 여직원의 평균급여보다 높은 남자직원은 모두 몇명입니까
select count(*) from muser where gender_check(reg_num) = '남' and 
salary > (select avg(salary) from muser where gender_check(reg_num) = '여');

11 grade별 평균 급여를 출력하세요..
select grade, avg(salary) from muser group by grade;

12 그룹별 평균급여가 전체 평균보다 높은 그룹을 출력하시오.
select grade, avg(salary) from muser group by grade having avg(salary)>(select avg(salary) from muser);

13 직원들의 월급 명세서를 출력하시오. (출력 형태는 이름, 월급(grade*salary*time)
select name, grade*salary*time 월급 from muser;

14 직원들의 성별을 출력하시오. (출력 형태 이름, 성별(성별은 남또는 여로 출력한다)
create or replace function gender_check(jumin in varchar2)
return varchar2
is gender varchar2(2);
begin    IF SUBSTR(jumin, 8,1) in( '1' , '3')

      THEN GENDER := '남';

    ELSE GENDER := '여';

    END IF;

    RETURN GENDER;

END;

select name, gender_check(reg_num) from muser;

or

select name 이름, decode(substr(reg_num,8,1),'1','남','3','남','여') 성별
from muser;

or

select name, 
case 
when substr(reg_num,8,1) in ('1','3') then '남'
else '여'
end as 성별 
from muser;

15 time은 근무시간이 근무시간이 31이상인 사람의 이름을 출력하시오.
select name from muser where time >= 31;

16 짝수년도에 태어난 사람들의 이름을 모두 출력하싱.
select name from muser where mod(substr(reg_num,1,2),2) = 0;

17 직원들의 생년월일을 출력하시오. (출력 형태는 이름과 생년월일(97년1월2일))
select to_char(to_date(substr(reg_num,1,6)), 'YY"년"MM"월"DD"일"') reg_num from muser;

18 여직원들의 육아를 지원하기 위한 정책으로 time을 2시간가산하기로 했다. 이를 처리 하시오.
select id, reg_num, name, time+2 근무시간 from muser where gender_check(reg_num)='여';

19 나이별 인원수는 몇명입니까
나이 확인 용 함수
create or replace function age_check(reg_num in varchar2)
return varchar2
is age varchar2(2);
begin    IF SUBSTR(reg_num, 8,1) in( '1' , '2')

      THEN age := to_number(to_char(sysdate,'YYYY')) - (1900+to_number(substr(reg_num,1,2)));

    ELSE age := to_number(to_char(sysdate,'YYYY')) - (2000+to_number(substr(reg_num,1,2)));

    END IF;

    RETURN age;

END;

select 문
select age_check(reg_num) 나이, count(*) from muser group by age_check(reg_num) order by age_check(reg_num) desc;

20 2학년그룹과 4학년 그룹은 모두 몇명입니까
select grade, count(*) from muser group by grade having grade = 2 or grade = 4;

추가문제

#1) 모든 사람이 태어난 후 오늘까지 몇 달이 지났는지 출력하시오
(출력형태: 이름, 주민번호, 지금까지살아온월수)
select name, reg_num, age_check(reg_num)*12-substr(reg_num,3,2) 살아온월수 from muser;

#2) time을 나이로 봄. 30~31세의 살아온 월수의 합, 32세 이상의 살아온 월수의 합 구하기

SELECT
    SUM(CASE 
            WHEN time = 30 OR time = 31 THEN time * 12
        END) 서른서른하나,
    SUM(CASE 
            WHEN time >= 32 THEN time * 12
        END) 서른둘
FROM muser;

select 
(select trunc(sum(months_between(sysdate, substr(reg_num,1,6))))
from muser where time in (30,31)) as 삼공삼일,
(select trunc(sum(months_between(sysdate, substr(reg_num,1,6))))
from muser where time >= 32) as 삼이
from dual;

#3) 연령별 급여의 합, over()함수 이용
select distinct time, sum(salary) over(partition by time) as 급여 from muser order by time asc;

#4) 연령별 인원수, over()함수 이용
select distinct time, count(*) over(partition by time) as 인원수 from muser order by time asc;

#5) 등급별 급여의 최고급여, over()함수 이용
select distinct time, max(salary) over(partition by time) as 최고급여 from muser order by time asc;

#6) 구글검색하여 오라클 함수 정리


select distinct... - 중복 제거 키워드
distinct는 중복된 컬럼을 제거하고 select절에서 한번만 사용이 가능
중복 제거 범위는 select에서 지정한 전체 행의 중복이다.



over() - partition by a: a를 기준으로 그룹을 쪼갠다
over() - order by a desc/asc: a를 기준으로 정렬해준다
over() - windowing clause: partition by, order  by 로 충분히 분할하지 못했을 경우 사용. order by를 사용한 뒤에만 
	사용 가능.조건에 맞는 ROW를 가지고 정렬하는 ROWS BETWEEN start_point AND end_point와
	조건에 맞는 값을 가지고 정렬하는 RANGE BETWEEN start_point AND end_point 가 있다



mod - 홀수와 짝수를 구하는 함수
MOD(A.USER_ID, 2) = 1 홀수
MOD(A.USER_ID, 2) = 0 짝수



case when 문 - select 문 안에서 조건을 주기에 적합한 방식이다. where문까지 가지 않고도 조건식 사용 가능
select a, case when a = '10' then 'Seoul'
	      when a = '20' then 'Suwon'
	      else 'Yongin'
	end as region
from abc

이걸 , 를 넣고 여러 개를 쓰면 한 셀렉트 문에 각자의 조건을 가진 튜플들을 여러 개 만들 수 있게 된다.